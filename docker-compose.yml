version: "2.4"
services:
  gomplate:
    image: hairyhenderson/gomplate
    environment:
      - GOMPLATE_SUPPRESS_EMPTY=true

  generate-terraform-tfvars:
    extends: gomplate
    env_file: .env
    volumes:
      - "$PWD/infrastructure/${INFRASTRUCTURE_PROVIDER?Please provide an infra provider.}:/work"
    working_dir: /work
    command:
      - "--file"
      - terraform.tfvars.tmpl
      - "--out"
      - terraform.tfvars

  generate-terraform-backend-vars:
    extends: gomplate
    env_file: .env
    volumes:
      - "$PWD/infrastructure/${INFRASTRUCTURE_PROVIDER?Please provide an infra provider.}:/work"
    working_dir: /work
    command:
      - "--file"
      - backend.tfvars.tmpl
      - "--out"
      - backend.tfvars

  generate-hugo-configs:
    extends: gomplate
    env_file: .env
    volumes:
      - "${PWD}:/work"
    working_dir: /work
    command:
      - "--file"
      - config.toml.tmpl
      - "--out"
      - config.toml

  generate-hugo-test-configs:
    extends: gomplate
    env_file: .env.test
    volumes:
      - "${PWD}:/work"
    working_dir: /work
    command:
      - "--file"
      - config.toml.tmpl
      - "--out"
      - config.toml

  hugo:
    build:
      args:
        - HUGO_VERSION=0.49
      context: .
    tty: true
    volumes:
      - "${PWD}/site:/site"
      - "${PWD}/layouts/:/site/layouts"
      - "${PWD}/themes/:/site/themes"
      - "${PWD}/static/:/site/static"
      - "${PWD}/config.toml:/site/config.toml"
    working_dir: /site
    ports:
      - 8080:8080

  hugo-server:
    extends: hugo
    env_file: .env
    depends_on:
      - generate-hugo-configs
    volumes:
      - "${PWD}/posts/:/site/content/post"
    command:
      - server
      - --baseURL
      - "${HUGO_BASE_URL}"
      - --bind
      - "0.0.0.0"
      - -p
      - "8080"

  hugo-test-server:
    extends: hugo
    env_file: .env.test
    depends_on:
      - generate-hugo-test-configs
    volumes:
      - "${PWD}/tests/fixtures/test_posts/:/site/content/post"
    command:
      - server
      - --baseURL
      - "http://localhost"
      - --bind
      - "0.0.0.0"
      - -p
      - "8080"

  hugo-unit-tests:
    image: graze/bats
    env_file: .env.test
    depends_on:
      - generate-hugo-test-configs
      - hugo-test-server
    links:
      - hugo-test-server:hugo
    volumes:
      - "${PWD}/tests:/tests"
    command: /tests/unit

  hugo-integration-tests:
    image: graze/bats
    env_file: .env
    depends_on:
      - generate-hugo-configs
    volumes:
      - "${PWD}/tests/integration:/tests"
    command: /tests

  deploy-hugo-to-s3:
    env_file: .env
    depends_on:
      - generate-hugo-configs
    environment:
      - S3_BUCKET_TO_DEPLOY_TO
    volumes:
      - "${PWD}:/work"
    image: anigeo/awscli
    command:
      - s3
      - cp
      - "--recursive"
      - "/work/site/"
      - "s3://${S3_BUCKET_TO_DEPLOY_TO:-bucket_missing}/"

  terraform:
    image: hashicorp/terraform
    volumes:
      - "${PWD}/infrastructure/${INFRASTRUCTURE_PROVIDER?Please provide an infrastructure provider.}:/work"
    working_dir: /work
    environment:
      - TF_INPUT=0
      - TF_CLI_ARGS_plan=-lock=false -auto-approve=false
      - TF_CLI_ARGS_apply=-lock=false -auto-approve=false
      - TF_CLI_ARGS_destroy=-lock=false -auto-approve=false

