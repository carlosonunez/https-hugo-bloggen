version: "2.4"
services:
  gomplate:
    image: hairyhenderson/gomplate:v3.10.0-alpine
    env_file: .env
    volumes:
      - "$PWD:/work"
      - "$PWD/.env:/.env"
    working_dir: /work
    environment:
      - GOMPLATE_SUPPRESS_EMPTY=true

  gomplate-aws:
    extends: gomplate
    environment:
      - AWS_ACCESS_KEY_ID
      - AWS_SECRET_ACCESS_KEY
      - AWS_REGION
      - AWS_SESSION_TOKEN

  nginx:
    image: nginx:alpine
    container_name: nginx
    volumes:
      - "$PWD/public:/usr/share/nginx/html"
    ports:
      - 8080:80

  hugo:
    image: klakegg/hugo:0.111.3-ext-ubuntu
    env_file: .env
    volumes:
      - "$PWD:/work"
    working_dir: /work

  terraform:
    image: carlosnunez/terraform:1.0.11
    working_dir: /work
    env_file: .env
    environment:
      - TF_INPUT=0
      - TF_CLI_ARGS_apply=-lock=false -auto-approve=true
      - TF_CLI_ARGS_destroy=-lock=false -auto-approve=true

  terraform-docker:
    extends: terraform
    volumes:
      - "$PWD/infrastructure/docker:/work"
      - "$PWD/public:/site"
      - "${DOCKER_SOCK:-/var/run/docker.sock}:/var/run/docker.sock"

  terraform-aws:
    extends: terraform
    volumes:
      - "$PWD/infrastructure/aws:/work"
    environment:
      - AWS_ACCESS_KEY_ID
      - AWS_SECRET_ACCESS_KEY
      - AWS_REGION
      - AWS_SESSION_TOKEN
      - |-
        TF_CLI_ARGS_init=-backend=true -backend-config="bucket=$TERRAFORM_STATE_S3_BUCKET_NAME"
          -backend-config="key=$TERRAFORM_STATE_S3_BUCKET_KEY"
          -backend-config="region=$AWS_REGION"
