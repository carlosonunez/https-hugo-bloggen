version: "2.4"
services:
  fetch-hugo-theme:
    image: alpine/git
    volumes:
      - "$HOST_PWD:/work"
    working_dir: /work
    env_file: .env
    environment:
      - HUGO_THEME_REPO_URL
    entrypoint: "sh -c 'rm -rf themes && 1>/dev/null git clone $HUGO_THEME_REPO_URL themes/$$(basename $HUGO_THEME_REPO_URL)'"

  hugo-generate-static-files:
    extends: hugo
    env_file: .env

  hugo-server:
    extends: hugo
    env_file: .env
    ports:
      - 8080:8080
    depends_on:
      - generate-hugo-configs
    command:
      - server
      - --baseURL
      - "http://localhost"
      - --bind
      - "0.0.0.0"
      - -p
      - "8080"
    ports:
      - 8080:8080


  hugo-test-server:
    extends: hugo
    env_file: .env.test
    depends_on:
      - generate-hugo-test-configs
    volumes:
      - "${HOST_PWD}/tests/fixtures/test_posts/:/site/content/post"
      - "${HOST_PWD}/tests/fixtures/test_themes/:/site/themes"
    command:
      - server
      - --baseURL
      - "http://localhost"
      - --bind
      - "0.0.0.0"
      - -p
      - "8080"
    ports:
      - 8080:8080

  hugo-unit-tests:
    image: graze/bats
    env_file: .env.test
    depends_on:
      - generate-hugo-test-configs
      - hugo-test-server
    links:
      - hugo-test-server:hugo
    volumes:
      - "${HOST_PWD}/tests:/tests"
    command: /tests/unit

  hugo-integration-tests:
    image: graze/bats
    env_file: .env
    environment:
      - BLOG_URL
    volumes:
      - "${HOST_PWD}/tests:/tests"
    command: /tests/integration

  hugo-production-tests:
    image: graze/bats
    env_file: .env
    environment:
      - BLOG_URL
      - CDN_URL
    volumes:
      - "${HOST_PWD}/tests:/tests"
    command: /tests/production

  generate-hugo-configs:
    extends: gomplate
    env_file: .env
    volumes:
      - "${HOST_PWD}:/work"
    working_dir: /work
    command:
      - "--file"
      - config.toml.tmpl
      - "--out"
      - config.toml

  generate-hugo-test-configs:
    extends: gomplate
    env_file: .env.test
    volumes:
      - "${HOST_PWD}:/work"
    working_dir: /work
    command:
      - "--file"
      - config.toml.tmpl
      - "--out"
      - config.toml
